@inherits CanvasManagerBase

<div class="blazorex-canvases">
    <CascadingValue Value=@this>
    @foreach (var (name, options) in _names)
    {
        if(options.OnCanvasReadyAsync is not null && options.OnCanvasReady is not null)
        {
            throw new InvalidOperationException($"Cannot set both {nameof(options.OnCanvasReady)} and {nameof(options.OnCanvasReadyAsync)}");
        }

        EventCallback<CanvasBase> onCanvasReady = 
            options.OnCanvasReadyAsync != null ? 
            EventCallback.Factory.Create<CanvasBase>(this, async (canvas) => await options.OnCanvasReadyAsync(canvas)) : 
            EventCallback.Factory.Create<CanvasBase>(this, options.OnCanvasReady);
       
        <div id="@(name)Container" class="blazorex-canvas-container" hidden="@options.Hidden">
            <Canvas @ref="_canvases[name]"
                OnCanvasReady="@onCanvasReady"
                OnFrameReady="@options.OnFrameReady"
                OnMouseMove="@options.OnMouseMove"
                OnMouseWheel="@options.OnMouseWheel"
                OnMouseDown="@options.OnMouseDown"
                OnMouseUp="@options.OnMouseUp"
                OnKeyDown="@options.OnKeyDown"
                OnKeyUp="@options.OnKeyUp"
                OnResize="@options.OnResize"
                Width="@options.Width"
                Height="@options.Height"
                Alpha="@options.Alpha"
                ColorSpace="@options.ColorSpace"
                Desynchronized="@options.Desynchronized"
                WillReadFrequently="@options.WillReadFrequently"
                Name="@name"/>
        </div>
    }
    </CascadingValue>
</div> 